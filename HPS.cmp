	component HPS is
		port (
			clk_clk            : in    std_logic                     := 'X';             -- clk
			reset_reset_n      : in    std_logic                     := 'X';             -- reset_n
			memory_mem_a       : out   std_logic_vector(12 downto 0);                    -- mem_a
			memory_mem_ba      : out   std_logic_vector(2 downto 0);                     -- mem_ba
			memory_mem_ck      : out   std_logic;                                        -- mem_ck
			memory_mem_ck_n    : out   std_logic;                                        -- mem_ck_n
			memory_mem_cke     : out   std_logic;                                        -- mem_cke
			memory_mem_cs_n    : out   std_logic;                                        -- mem_cs_n
			memory_mem_ras_n   : out   std_logic;                                        -- mem_ras_n
			memory_mem_cas_n   : out   std_logic;                                        -- mem_cas_n
			memory_mem_we_n    : out   std_logic;                                        -- mem_we_n
			memory_mem_reset_n : out   std_logic;                                        -- mem_reset_n
			memory_mem_dq      : inout std_logic_vector(31 downto 0) := (others => 'X'); -- mem_dq
			memory_mem_dqs     : inout std_logic_vector(3 downto 0)  := (others => 'X'); -- mem_dqs
			memory_mem_dqs_n   : inout std_logic_vector(3 downto 0)  := (others => 'X'); -- mem_dqs_n
			memory_mem_odt     : out   std_logic;                                        -- mem_odt
			memory_mem_dm      : out   std_logic_vector(3 downto 0);                     -- mem_dm
			memory_oct_rzqin   : in    std_logic                     := 'X';             -- oct_rzqin
			axi_master_awid    : out   std_logic_vector(11 downto 0);                    -- awid
			axi_master_awaddr  : out   std_logic_vector(29 downto 0);                    -- awaddr
			axi_master_awlen   : out   std_logic_vector(3 downto 0);                     -- awlen
			axi_master_awsize  : out   std_logic_vector(2 downto 0);                     -- awsize
			axi_master_awburst : out   std_logic_vector(1 downto 0);                     -- awburst
			axi_master_awlock  : out   std_logic_vector(1 downto 0);                     -- awlock
			axi_master_awcache : out   std_logic_vector(3 downto 0);                     -- awcache
			axi_master_awprot  : out   std_logic_vector(2 downto 0);                     -- awprot
			axi_master_awvalid : out   std_logic;                                        -- awvalid
			axi_master_awready : in    std_logic                     := 'X';             -- awready
			axi_master_wid     : out   std_logic_vector(11 downto 0);                    -- wid
			axi_master_wdata   : out   std_logic_vector(63 downto 0);                    -- wdata
			axi_master_wstrb   : out   std_logic_vector(7 downto 0);                     -- wstrb
			axi_master_wlast   : out   std_logic;                                        -- wlast
			axi_master_wvalid  : out   std_logic;                                        -- wvalid
			axi_master_wready  : in    std_logic                     := 'X';             -- wready
			axi_master_bid     : in    std_logic_vector(11 downto 0) := (others => 'X'); -- bid
			axi_master_bresp   : in    std_logic_vector(1 downto 0)  := (others => 'X'); -- bresp
			axi_master_bvalid  : in    std_logic                     := 'X';             -- bvalid
			axi_master_bready  : out   std_logic;                                        -- bready
			axi_master_arid    : out   std_logic_vector(11 downto 0);                    -- arid
			axi_master_araddr  : out   std_logic_vector(29 downto 0);                    -- araddr
			axi_master_arlen   : out   std_logic_vector(3 downto 0);                     -- arlen
			axi_master_arsize  : out   std_logic_vector(2 downto 0);                     -- arsize
			axi_master_arburst : out   std_logic_vector(1 downto 0);                     -- arburst
			axi_master_arlock  : out   std_logic_vector(1 downto 0);                     -- arlock
			axi_master_arcache : out   std_logic_vector(3 downto 0);                     -- arcache
			axi_master_arprot  : out   std_logic_vector(2 downto 0);                     -- arprot
			axi_master_arvalid : out   std_logic;                                        -- arvalid
			axi_master_arready : in    std_logic                     := 'X';             -- arready
			axi_master_rid     : in    std_logic_vector(11 downto 0) := (others => 'X'); -- rid
			axi_master_rdata   : in    std_logic_vector(63 downto 0) := (others => 'X'); -- rdata
			axi_master_rresp   : in    std_logic_vector(1 downto 0)  := (others => 'X'); -- rresp
			axi_master_rlast   : in    std_logic                     := 'X';             -- rlast
			axi_master_rvalid  : in    std_logic                     := 'X';             -- rvalid
			axi_master_rready  : out   std_logic                                         -- rready
		);
	end component HPS;

